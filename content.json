[{"title":"next(),hasNext(),nextLine(),hasNextLine()","date":"2020-01-12T09:08:25.000Z","path":"2020/01/12/next(),hasNext(),nextLine(),hasNextLine()/","text":"next()和hasNext()？ nextLine()和hasNextLine()? java通过Scanner类来获取用户输入，形式如下： Scanner scanner = new Scanner(System.in); Scanner类的next()和nextLine()方法输入字符串，HasNext()和HasNextLine()判断是否还有输入的数据。 next() 输入数据import java.util.Scanner; public class ScannerDemo { public static void main(String[] args) { Scanner scan = new Scanner(System.in); // 从键盘接收数据 // next方式接收字符串 System.out.println(\"next方式接收：\"); // 判断是否还有输入 if (scan.hasNext()) { String str1 = scan.next(); System.out.println(\"输入的数据为：\" + str1); } scan.close(); } } NextLine() 输入数据import java.util.Scanner; public class ScannerDemo { public static void main(String[] args) { Scanner scan = new Scanner(System.in); // 从键盘接收数据 // nextLine方式接收字符串 System.out.println(\"nextLine方式接收：\"); // 判断是否还有输入 if (scan.hasNextLine()) { String str2 = scan.nextLine(); System.out.println(\"输入的数据为：\" + str2); } scan.close(); } } 总结next(): 读取到有效字符后才结束输入。 对输入有效字符前遇到的空白，next()方法会自动去掉空白。 只有输入有效字符后才将其后面输入的空白作为分隔符或结束符。 next()方法不能得到带有空白的字符串。 NextLine() NextLine()方法可以得到输入回车符前的所有字符（包括空白）。","categories":[],"tags":[{"name":"java基础学习","slug":"java基础学习","permalink":"https://yoken-mao.github.io/tags/java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"}]},{"title":"hexo+yilia+评论+转载说明","date":"2020-01-12T08:50:16.000Z","path":"2020/01/12/hexo+yilia+valine/","text":"本篇主要介绍我的博客如何增加评论插件和转载版权说明。 博客增加评论 我是参考下面设置的。 https://ink-bottle.github.io/2019/03/03/hexo-%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0Valine-gitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/ 转载说明设置 参考链接： https://yansheng836.github.io/article/3d67529f.html","categories":[],"tags":[{"name":"yilia博客配置","slug":"yilia博客配置","permalink":"https://yoken-mao.github.io/tags/yilia%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/"}]},{"title":"Dipole:Diagnosis Prediction in Healthcare via  Attention-based Bidirectional Recurrent Neural Networks","date":"2020-01-12T08:47:27.000Z","path":"2020/01/12/Dipole/","text":"这篇是KDD`17中的论文，我之前做对比实验的时候复现过代码。现在想把这篇论文的思想记录下来.论文思想：主要是通过本次的诊断预测下一次的诊断。论文的主要框架是一个BRNN(双向RNN)和Concatenation-based Attention。 论文链接https://arxiv.org/pdf/1706.05764.pdf 论文代码论文中没有开源他们的代码，但是我在github上找到有人对它的复现（PS:不一定完全正确，仅供参考）。 代码链接：https://github.com/Yuyoo/Dipole 看代码上的注释应该是东南大学的某位研究僧复现的，里面有pytorch版本和TensorFlow版的，真是相当详细了。（PS：我自己复现的跑出来效果不好，以为自己复现错了。看到这位博主复现的代码与自己复现的一样，就知道了这个模型可能不太适合我们的那个数据。在这里十分感谢这位博主分享自己的代码）。 论文框架 1，Visit Embedding 2, Bidirectional Recurrent Neural Networks经过双向RNN出来的数据，也是双向的。1，正向 2，反向 3，最后拼接在一起 ，此时要注意输出的维度是原来的两倍。 3，Attention论文中提出了三种Attention方式。 Location-based Attention这个Attention没有结合ht,它用的是之前的信息hi. General Attention这个Attention结合ht了,注意hi和ht的范围.这边算完之后还要经过上面的公式3和公式4计算ct. Concatenation-based Attention这边算完之后还要经过上面的公式3和公式4计算ct. Diagnosis Prediction 复现总结我用这篇论文作对比实验，三种attention方法都试了，结果相差无几。论文中也显示了 在复现的时候要特别注意tensor维度的转换。","categories":[],"tags":[{"name":"深度学习论文","slug":"深度学习论文","permalink":"https://yoken-mao.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87/"}]},{"title":"MarkDown小技巧","date":"2020-01-11T06:24:39.000Z","path":"2020/01/11/MarkDown小技巧/","text":"本文介绍常用的MarkDown技巧和自己尝试用这款软件写博客时候踩过的一些坑！ 标题 ’#’ + 空格 + 标题 ： 一级标题 ‘##’ + 空格 + 标题： 二级标题 ‘###’ + 空白格 + 标题： 三级标题 。。。。。。。 以此类推。 列表有序列表“1.” 加空格再输入内容，注意在每一段之后加上两个空格再换行否则列表不自动换行。 1，第一段2，第二段3，第三段 无序列表减号“-”或者星号“*”加上空格输入内容即为无序列表（建议第二种方法）。 第一段 第二段 第三段 引用文章 在每一行前面加上英文输入法输入的大于号“&gt;”，换行的时候同样也是在后面加两个空格，再回车。 最近在看庆余年，范闲写了一首诗：万里悲秋常作客，百年多病独登台。 加粗文本的前后各加上两个星号” ** “且与文本之间不能有空格。例如: 加粗 斜体文本的前后各加上一个星号。例如：庆余年，林婉儿 添加图片和链接如果是图片的话就要将图片的本地文件放到与该MarkDown文件相同的路径下，且填写文件的相对路径。如果是网页链接就贴上链接，但一定要包含http 具体格式如下：图片： 感叹号+方括号+圆括号。只显示圆括号里面的图片文件的相对路径或者网页链接。（建议选择前者，文件名称不要带有中文） 高能提示： win10 系统千万不要用MarkDown上面的Insert插入文件，它可能出现图片不显示的情况。还是建议自己手打插入图片。形式如下： 这里的MarkDown小技巧文件夹路径是与本md文件在同一个路径下。 还有一点特别注意：插入图片的文件名称一定要保证正确。如果是6.png就不显示，6.PNG就显示。因为源文件就是6.PNG,这困扰了我一上午。2333~2. 插入网页上的图片，直接把图片的链接放在圆括号就行。3. 可以把本地图片上传到blog的github仓库，然后再在圆括号里面填入图片的链接。形式如下： 上传完之后在仓库的img路径下选择一个图片,然后右键选择复制图片地址，在空白浏览器地址栏复制此链接就可以看到你github仓库上的该图片地址。此时你就可以把该图片链接放在圆括号里面了。 如果上面的方法还不能解决hexo Blog 插入图片的问题,参考下面的解决方案。 https://blog.csdn.net/qq_37497322/article/details/80628713 https://blog.csdn.net/Fitz1318/article/details/86548129 网页方括号+圆括号。选择MarkDown软件上的Insert,然后选择Hyperlink.形式如下：http://www.baidu.com 代码前后各加上三个反引号，就是数字1前面那个键。如下： 123list_1 = [1,2,3] list_2 = [2,3,4] print(list_1 + list_2) 分割线三个-,就是1前面那个。 快捷键 Ctrl + I： 斜体 Ctrl + B： 粗体 Ctrl + Q： 引用 Ctrl + 1： 标题1 Ctrl + 2： 标题2 Ctrl + K： 代码块 Ctrl + L： 链接 Ctrl + T： 时间戳 Ctrl + U： 无序列表 Ctrl + Shift + O ： 有序列表 Ctrl + R ： 水平标尺 F4 ： 启用水平布局/垂直预览 F5 ： 启用/关闭实时预览 F6 ： 在浏览器中预览 最后注意 在每一段文字码完之后要打两个空格再回车。 一篇文章如果太长，可以只显示前面的部分。点击展开全文时才展开全部，在md文件内输入如下代码。 可以参考的一个Markdown学习网站。https://www.runoob.com/markdown/md-tutorial.html","categories":[],"tags":[{"name":"MarkDown","slug":"MarkDown","permalink":"https://yoken-mao.github.io/tags/MarkDown/"}]}]